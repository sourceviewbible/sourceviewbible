{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./node_modules/gatsby-link/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/SVLogoXmas.png","webpack:///./src/pages/tocindex.module.css","webpack:///./src/images/SVLogo.jpeg","webpack:///./node_modules/gatsby-plugin-google-analytics/index.js"],"names":["pageQuery","__webpack_exports__","_ref","data","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","src","_images_SVLogoXmas_png__WEBPACK_IMPORTED_MODULE_6___default","className","_tocindex_module_css__WEBPACK_IMPORTED_MODULE_4___default","icons","alt","reader","svtitle","readertitle","Matthew","edges","map","post","key","node","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","path","link","title","reference","ref","changeLanguage","gatsby_plugin_google_analytics__WEBPACK_IMPORTED_MODULE_7__","href","switchlang","switch","copyrightIndex","_interopRequireDefault","__webpack_require__","exports","__esModule","withPrefix","navigateTo","replace","push","navigate","default","_objectWithoutPropertiesLoose2","_extends2","_inheritsLoose2","_assertThisInitialized2","_defineProperty2","_propTypes","_react","_router","_gatsby","normalizePath","NavLinkPropTypes","activeClassName","string","activeStyle","object","GatsbyLink","_React$Component","props","_this","call","this","isCurrent","filter","Boolean","join","style","IOSupported","window","IntersectionObserver","location","state","handleRef","bind","_proto","prototype","componentDidUpdate","prevProps","prevState","___loader","enqueue","parsePath","pathname","componentDidMount","el","cb","io","_this2","innerRef","entries","forEach","entry","target","isIntersecting","intersectionRatio","unobserve","disconnect","observe","render","_this3","_this$props","_this$props$getProps","getProps","defaultGetProps","_onClick","onClick","_onMouseEnter","onMouseEnter","rest","prefixedTo","Link","e","hovering","button","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","preventDefault","_parsePath","hash","element","document","getElementById","substr","scrollIntoView","scrollTo","Component","propTypes","func","isRequired","bool","Comp","_default","Location","_ref2","options","___navigate","console","warn","___push","___replace","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","Consumer","staticQueryData","query","children","Error","m","module","$export","fails","defined","quot","createHTML","tag","attribute","value","S","String","p1","NAME","exec","O","P","F","test","toLowerCase","split","length","_extends","Object","assign","i","arguments","source","hasOwnProperty","apply","url","excluded","sourceKeys","keys","indexOf","ProdPageRenderer","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","react__WEBPACK_IMPORTED_MODULE_1___default","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","json","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","p","bookTitle","logodiv","logo","OutboundLink","redirect","ga","eventCategory","eventAction","eventLabel","transport","hitCallback"],"mappings":"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","file":"component---src-pages-index-js-587182fa6abcfab7cca9.js","sourcesContent":["import React from 'react';\nimport { Link } from \"gatsby\"\nimport styles from './tocindex.module.css';\nimport SVLogo from '../images/SVLogo.jpeg';\nimport SVLogoXmas from '../images/SVLogoXmas.png';\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\nimport { graphql } from 'gatsby'\n\nconst BlogPage = ({data}) => (\n    <div>\n        <img src={SVLogoXmas} className={styles.icons} alt={'SourceView Logo'}/>\n        <div className={styles.reader}>\n            <p className={styles.svtitle}>SourceView</p><p className={styles.readertitle}>ADVENT LECTIONARY</p>\n        </div>\n         \n        {/* <details>\n            <summary>{data.Matthew.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.title}</span>))}</summary> */}\n                <ul1>\n                    {data.Matthew.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.ref}</p>\n                            <hr /></Link>\n                        </li>\n                    ))}\n                </ul1>\n        {/* </details> */}\n        {/*<details>\n            <summary>{data.Mark.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Mark.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Luke.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Luke.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.John.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.John.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Acts.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Acts.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Romans.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Romans.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Corinthians1.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Corinthians1.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Corinthians2.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Corinthians2.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Galatians.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Galatians.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Ephesians.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Ephesians.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Philippians.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Philippians.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Colossians.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Colossians.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Thessalonians1.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Thessalonians1.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Thessalonians2.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Thessalonians2.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Timothy1.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Timothy1.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Timothy2.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Timothy2.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Titus.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Titus.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Philemon.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Philemon.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Hebrews.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Hebrews.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.James.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.James.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Peter1.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Peter1.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Peter2.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Peter2.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.John1.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.John1.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.John2.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.John2.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.John3.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.John3.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Jude.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Jude.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details>\n        <details>\n            <summary>{data.Revelation.edges.slice(0,1).map( post => (<span className={styles.bookTitle} key={post.node.id}>{post.node.bookName}</span>))}</summary>\n                <ul>\n                    {data.Revelation.edges.map(post => (\n                        <li key={post.node.id}><Link to={post.node.path} className={styles.link}>\n                            <p className={styles.title}>{post.node.title}</p>\n                            <p className={styles.reference}>{post.node.bookName} {post.node.ref}</p>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n        </details> */}\n        <br /><br />\n        <div className={styles.changeLanguage}>\n            <OutboundLink href={'https:sourceviewbible.github.io/'}>\n                <p className={styles.switchlang}><span className={styles.switch}>&#x2261;</span>Main Menu</p>\n                {/* <p className={styles.switchlang}><span className={styles.switch}>&#x2261;</span>Cambiar Idioma</p> */}\n                {/* <p className={styles.switchlang}><span className={styles.switch}>&#x2261;</span>언어 변경</p> */}\n                {/* <p className={styles.switchlang}><span className={styles.switch}>&#x2261;</span>изменение языка</p> */}\n                {/* <p className={styles.switchlang}><span className={styles.switch}>&#x2261;</span>Mudar idioma</p> */}\n                {/* <p className={styles.switchlang}><span className={styles.switch}></span>cAnj laNgwij</p> */}\n            </OutboundLink>\n        </div>\n\n        {/* <h5 className={styles.copyrightIndex}>พระคัมภีร์ ฉบับแปลใหม่ (NTV) ฉบับ 2016<br />สงวนลิขสิทธิ์ © 1998, 2012<br />โดย หน่วยงานพระคัมภีร์ฉบับแปลใหม่<br /><br />© 2018 SourceView LLC.</h5> */}\n        <h5 className={styles.copyrightIndex}>Holy Bible, New Living Translation<br />copyright © 1996, 2004, 2015 by Tyndale House Foundation.<br />Used by permission of Tyndale House Publishers, Inc., Carol Stream, Illinois 60188. All rights reserved.<br /><br />© 2018 SourceView LLC.</h5>\n        {/* <h5 className={styles.copyrightIndex}>A provisional demo of the Uniskript WEB in the SourceView format<br />World English Bible (WEB)<br />a Public Domain Modern English translation<br />of the Holy Bible.<br /><br />© 2018 SourceView LLC.</h5> */}\n        {/* <h5 className={styles.copyrightIndex}>La Santa Biblia, Nueva Traducción Viviente,<br />© Tyndale House Foundation, 2010.<br />Todos los derechos reservados.<br /><br />© 2018 SourceView LLC.</h5> */}\n        {/* <h5 className={styles.copyrightIndex}>Kurt Aland et al., Novum Testamentum Graece<br />(28th Edition.; Stuttgart: Deutsche Bibelgesellschaft, 2012)<br /><br />© 2018 SourceView LLC.</h5> */}\n        {/* <h5 className={styles.copyrightIndex}>Biblia Hebraica Stuttgartensia:<br />With Westminster Hebrew Morphology.<br />(electronic ed.; Stuttgart; Glenside PA:<br />German Bible Society;<br />Westminster Seminary, 1996)<br /><br />© 2018 SourceView LLC.</h5> */}\n        {/* <h5 className={styles.copyrightIndex}>Temporary demo of the NTLH in the SourceView format<br />Copyright permission in process<br />Nova Tradução na Linguagem de Hoje<br />Copyright 2000 Sociedade Bíblica do Brasil.<br />Todos os direitos reservados<br /><br />© 2018 SourceView LLC.</h5> */}\n        {/* <h5 className={styles.copyrightIndex}>Temporary demo of the KRV in the SourceView format<br />Copyright permission in process<br />The Holy Bible:<br />Korean Revised Version KRV 개역한글<br /><br />© 2018 SourceView LLC.</h5> */}\n        {/* <h5 className={styles.copyrightIndex}>Russian Synodal Version (RUSV)<br />by Public Domain<br /><br />© 2018 SourceView LLC.</h5> */}\n    </div>\n    \n)\n\nexport const pageQuery = graphql`\n    query BlogIndexQuery {\n        Matthew: allAdventLectionary(filter: {bookId: {eq: 40}}) {\n            edges {\n              node {\n                id\n                bookId\n                bookName\n                ref\n                path\n                title\n                segment\n              }\n            }\n        },\n         Mark: allAdventLectionary(filter: {bookId: {eq: 41}}) {\n         edges {\n             node {\n                 id\n                 bookId\n                 bookName\n                 ref\n                 path\n                 title\n                 segment\n             }\n         }\n         },\n         Luke: allAdventLectionary(filter: {bookId: {eq: 42}}) {\n             edges {\n               node {\n                id\n                bookId\n                bookName\n                ref\n                path\n                title\n                segment\n               }\n             }\n         },\n         John: allAdventLectionary(filter: {bookId: {eq: 43}}) {\n         edges {\n             node {\n                id\n                bookId\n                bookName\n                ref\n                path\n                title\n                segment\n             }\n         }\n         },\n         Acts: allAdventLectionary(filter: {bookId: {eq: 44}}) {\n             edges {\n               node {\n                id\n                bookId\n                bookName\n                ref\n                path\n                title\n                segment\n               }\n             }\n         },\n         Romans: allAdventLectionary(filter: {bookId: {eq: 45}}) {\n         edges {\n             node {\n                id\n                bookId\n                bookName\n                ref\n                path\n                title\n                segment\n             }\n         }\n         },\n         Corinthians1: allAdventLectionary(filter: {bookId: {eq: 46}}) {\n             edges {\n               node {\n                 id\n                 bookId\n                 bookName\n                 ref\n                 path\n                 title\n               }\n             }\n         },\n         Corinthians2: allAdventLectionary(filter: {bookId: {eq: 47}}) {\n         edges {\n             node {\n             id\n             bookId\n             bookName\n             ref\n             path\n             title\n             }\n         }\n         },\n         Galatians: allAdventLectionary(filter: {bookId: {eq: 48}}) {\n             edges {\n               node {\n                 id\n                 bookId\n                 bookName\n                 ref\n                 path\n                 title\n               }\n             }\n         },\n         Ephesians: allAdventLectionary(filter: {bookId: {eq: 49}}) {\n         edges {\n             node {\n             id\n             bookId\n             bookName\n             ref\n             path\n             title\n             }\n         }\n         },\n         Philippians: allAdventLectionary(filter: {bookId: {eq: 50}}) {\n             edges {\n               node {\n                 id\n                 bookId\n                 bookName\n                 ref\n                 path\n                 title\n               }\n             }\n         },\n         Colossians: allAdventLectionary(filter: {bookId: {eq: 51}}) {\n         edges {\n             node {\n             id\n             bookId\n             bookName\n             ref\n             path\n             title\n             }\n         }\n         },\n         Thessalonians1: allAdventLectionary(filter: {bookId: {eq: 52}}) {\n             edges {\n               node {\n                 id\n                 bookId\n                 bookName\n                 ref\n                 path\n                 title\n               }\n             }\n         },\n         Thessalonians2: allAdventLectionary(filter: {bookId: {eq: 53}}) {\n         edges {\n             node {\n             id\n             bookId\n             bookName\n             ref\n             path\n             title\n             }\n         }\n         },\n         Timothy1: allAdventLectionary(filter: {bookId: {eq: 54}}) {\n             edges {\n               node {\n                 id\n                 bookId\n                 bookName\n                 ref\n                 path\n                 title\n               }\n             }\n         },\n         Timothy2: allAdventLectionary(filter: {bookId: {eq: 55}}) {\n         edges {\n             node {\n             id\n             bookId\n             bookName\n             ref\n             path\n             title\n             }\n         }\n         },\n         Titus: allAdventLectionary(filter: {bookId: {eq: 56}}) {\n             edges {\n               node {\n                 id\n                 bookId\n                 bookName\n                 ref\n                 path\n                 title\n               }\n             }\n         },\n         Philemon: allAdventLectionary(filter: {bookId: {eq: 57}}) {\n         edges {\n             node {\n             id\n             bookId\n             bookName\n             ref\n             path\n             title\n             }\n         }\n         },\n         Hebrews: allAdventLectionary(filter: {bookId: {eq: 58}}) {\n             edges {\n               node {\n                 id\n                 bookId\n                 bookName\n                 ref\n                 path\n                 title\n               }\n             }\n         },\n         James: allAdventLectionary(filter: {bookId: {eq: 59}}) {\n         edges {\n             node {\n             id\n             bookId\n             bookName\n             ref\n             path\n             title\n             }\n         }\n         },\n         Peter1: allAdventLectionary(filter: {bookId: {eq: 60}}) {\n             edges {\n               node {\n                 id\n                 bookId\n                 bookName\n                 ref\n                 path\n                 title\n               }\n             }\n         },\n         Peter2: allAdventLectionary(filter: {bookId: {eq: 61}}) {\n         edges {\n             node {\n             id\n             bookId\n             bookName\n             ref\n             path\n             title\n             }\n         }\n         },\n         John1: allAdventLectionary(filter: {bookId: {eq: 62}}) {\n             edges {\n               node {\n                 id\n                 bookId\n                 bookName\n                 ref\n                 path\n                 title\n               }\n             }\n         },\n         John2: allAdventLectionary(filter: {bookId: {eq: 63}}) {\n         edges {\n             node {\n             id\n             bookId\n             bookName\n             ref\n             path\n             title\n             }\n         }\n         },\n         John3: allAdventLectionary(filter: {bookId: {eq: 64}}) {\n             edges {\n               node {\n                 id\n                 bookId\n                 bookName\n                 ref\n                 path\n                 title\n               }\n             }\n         },\n         Jude: allAdventLectionary(filter: {bookId: {eq: 65}}) {\n         edges {\n             node {\n             id\n             bookId\n             bookName\n             ref\n             path\n             title\n             }\n         }\n         },\n         Revelation: allAdventLectionary(filter: {bookId: {eq: 66}}) {\n             edges {\n               node {\n                 id\n                 bookId\n                 bookName\n                 ref\n                 path\n                 title\n               }\n             }\n         }\n    }\n`;\n\nexport default BlogPage;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.withPrefix = withPrefix;\nexports.navigateTo = exports.replace = exports.push = exports.navigate = exports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _router = require(\"@reach/router\");\n\nvar _gatsby = require(\"gatsby\");\n\n/*global __PATH_PREFIX__ */\nfunction withPrefix(path) {\n  return normalizePath(__PATH_PREFIX__ + \"/\" + path);\n}\n\nfunction normalizePath(path) {\n  return path.replace(/\\/+/g, \"/\");\n}\n\nvar NavLinkPropTypes = {\n  activeClassName: _propTypes.default.string,\n  activeStyle: _propTypes.default.object // Set up IntersectionObserver\n\n};\n\nvar handleIntersection = function handleIntersection(el, cb) {\n  var io = new window.IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (el === entry.target) {\n        // Check if element is within viewport, remove listener, destroy observer, and run link callback.\n        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          io.unobserve(el);\n          io.disconnect();\n          cb();\n        }\n      }\n    });\n  }); // Add element to the observer\n\n  io.observe(el);\n};\n\nvar GatsbyLink =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(GatsbyLink, _React$Component);\n\n  function GatsbyLink(props) {\n    var _this;\n\n    _this = _React$Component.call(this) || this; // Default to no support for IntersectionObserver\n\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"defaultGetProps\", function (_ref) {\n      var isCurrent = _ref.isCurrent;\n\n      if (isCurrent) {\n        return {\n          className: [_this.props.className, _this.props.activeClassName].filter(Boolean).join(\" \"),\n          style: (0, _extends2.default)({}, _this.props.style, _this.props.activeStyle)\n        };\n      }\n\n      return null;\n    });\n    var IOSupported = false;\n\n    if (typeof window !== \"undefined\" && window.IntersectionObserver) {\n      IOSupported = true;\n    }\n\n    var location = props.location;\n    _this.state = {\n      IOSupported: IOSupported,\n      location: location\n    };\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = GatsbyLink.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // Preserve non IO functionality if no support\n    if (this.props.to !== prevProps.to && !this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Preserve non IO functionality if no support\n    if (!this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    this.props.innerRef && this.props.innerRef(ref);\n\n    if (this.state.IOSupported && ref) {\n      // If IO supported and element reference found, setup Observer functionality\n      handleIntersection(ref, function () {\n        ___loader.enqueue((0, _gatsby.parsePath)(_this2.props.to).pathname);\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props = this.props,\n        to = _this$props.to,\n        _this$props$getProps = _this$props.getProps,\n        getProps = _this$props$getProps === void 0 ? this.defaultGetProps : _this$props$getProps,\n        _onClick = _this$props.onClick,\n        _onMouseEnter = _this$props.onMouseEnter,\n        location = _this$props.location,\n        $activeClassName = _this$props.activeClassName,\n        $activeStyle = _this$props.activeStyle,\n        $ref = _this$props.ref,\n        $innerRef = _this$props.innerRef,\n        state = _this$props.state,\n        replace = _this$props.replace,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"to\", \"getProps\", \"onClick\", \"onMouseEnter\", \"location\", \"activeClassName\", \"activeStyle\", \"ref\", \"innerRef\", \"state\", \"replace\"]);\n    var prefixedTo = withPrefix(to);\n    return _react.default.createElement(_router.Link, (0, _extends2.default)({\n      to: prefixedTo,\n      state: state,\n      getProps: getProps,\n      innerRef: this.handleRef,\n      onMouseEnter: function onMouseEnter(e) {\n        // eslint-disable-line\n        _onMouseEnter && _onMouseEnter(e);\n\n        ___loader.hovering((0, _gatsby.parsePath)(to).pathname);\n      },\n      onClick: function onClick(e) {\n        // eslint-disable-line\n        _onClick && _onClick(e);\n\n        if (e.button === 0 && // ignore right clicks\n        !_this3.props.target && // let browser handle \"target=_blank\"\n        !e.defaultPrevented && // onClick prevented default\n        !e.metaKey && // ignore clicks with modifier keys...\n        !e.altKey && !e.ctrlKey && !e.shiftKey) {\n          e.preventDefault(); // Is this link pointing to a hash on the same page? If so,\n          // just scroll there.\n\n          var _parsePath = (0, _gatsby.parsePath)(prefixedTo),\n              pathname = _parsePath.pathname,\n              hash = _parsePath.hash;\n\n          if (pathname === location.pathname || !pathname) {\n            var element = hash ? document.getElementById(hash.substr(1)) : null;\n\n            if (element !== null) {\n              element.scrollIntoView();\n            } else {\n              // This is just a normal link to the current page so let's emulate default\n              // browser behavior by scrolling now to the top of the page.\n              window.scrollTo(0, 0);\n            }\n          } // Make sure the necessary scripts and data are\n          // loaded before continuing.\n\n\n          navigate(prefixedTo, {\n            state: state,\n            replace: replace\n          });\n        }\n\n        return true;\n      }\n    }, rest));\n  };\n\n  return GatsbyLink;\n}(_react.default.Component);\n\nGatsbyLink.propTypes = (0, _extends2.default)({}, NavLinkPropTypes, {\n  innerRef: _propTypes.default.func,\n  onClick: _propTypes.default.func,\n  to: _propTypes.default.string.isRequired,\n  replace: _propTypes.default.bool // eslint-disable-next-line react/display-name\n\n});\n\nvar withLocation = function withLocation(Comp) {\n  return function (props) {\n    return _react.default.createElement(_router.Location, null, function (_ref2) {\n      var location = _ref2.location;\n      return _react.default.createElement(Comp, (0, _extends2.default)({\n        location: location\n      }, props));\n    });\n  };\n};\n\nvar _default = withLocation(GatsbyLink);\n\nexports.default = _default;\n\nvar navigate = function navigate(to, options) {\n  window.___navigate(to, options);\n};\n\nexports.navigate = navigate;\n\nvar push = function push(to) {\n  console.warn(\"The \\\"push\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___push(to);\n};\n\nexports.push = push;\n\nvar replace = function replace(to) {\n  console.warn(\"The \\\"replace\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___replace(to);\n}; // TODO: Remove navigateTo for Gatsby v3\n\n\nexports.replace = replace;\n\nvar navigateTo = function navigateTo(to) {\n  console.warn(\"The \\\"navigateTo\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"push\\\" instead.\");\n  return push(to);\n};\n\nexports.navigateTo = navigateTo;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    key: location.pathname,\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/SVLogoXmas-af2a894c4729b442c2001a5071ebd8aa.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bookTitle\":\"tocindex-module--bookTitle--3IaWw\",\"logodiv\":\"tocindex-module--logodiv--3fqNC\",\"reference\":\"tocindex-module--reference--1UxdK\",\"copyrightIndex\":\"tocindex-module--copyrightIndex--1XNQs\",\"changeLanguage\":\"tocindex-module--changeLanguage--7qRes\",\"switchlang\":\"tocindex-module--switchlang--1Nw2h\",\"switch\":\"tocindex-module--switch--1WjNc\",\"logo\":\"tocindex-module--logo--3ZXYM\",\"title\":\"tocindex-module--title--9Uuvn\",\"icons\":\"tocindex-module--icons---W3ao\",\"reader\":\"tocindex-module--reader--1mLZg\",\"svtitle\":\"tocindex-module--svtitle--14AnA\",\"readertitle\":\"tocindex-module--readertitle--3ejLB\"};","module.exports = __webpack_public_path__ + \"static/SVLogo-a75656aee1ad548b1b4255baf9d71ccf.jpeg\";","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.OutboundLink = OutboundLink;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction OutboundLink(props) {\n  return _react.default.createElement(\"a\", (0, _extends2.default)({}, props, {\n    onClick: function onClick(e) {\n      if (typeof props.onClick === \"function\") {\n        props.onClick();\n      }\n\n      var redirect = true;\n\n      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey || e.defaultPrevented) {\n        redirect = false;\n      }\n\n      if (props.target && props.target.toLowerCase() !== \"_self\") {\n        redirect = false;\n      }\n\n      if (window.ga) {\n        window.ga(\"send\", \"event\", {\n          eventCategory: \"Outbound Link\",\n          eventAction: \"click\",\n          eventLabel: props.href,\n          transport: redirect ? \"beacon\" : \"\",\n          hitCallback: function hitCallback() {\n            if (redirect) {\n              document.location = props.href;\n            }\n          }\n        });\n      } else {\n        if (redirect) {\n          document.location = props.href;\n        }\n      }\n\n      return false;\n    }\n  }));\n}\n\nOutboundLink.propTypes = {\n  href: _propTypes.default.string,\n  target: _propTypes.default.string,\n  onClick: _propTypes.default.func\n};"],"sourceRoot":""}